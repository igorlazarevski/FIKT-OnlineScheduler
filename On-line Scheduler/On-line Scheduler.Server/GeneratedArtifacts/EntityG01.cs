

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LightSwitchApplication
{
    #region Entities
    
    /// <summary>
    /// No Modeled Description Available
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
    public sealed partial class Aktivnost : global::Microsoft.LightSwitch.Framework.Base.EntityObject<global::LightSwitchApplication.Aktivnost, global::LightSwitchApplication.Aktivnost.DetailsClass>
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new instance of the Aktivnost entity.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Aktivnost()
            : this(null)
        {
        }
    
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Aktivnost(global::Microsoft.LightSwitch.Framework.EntitySet<global::LightSwitchApplication.Aktivnost> entitySet)
            : base(entitySet)
        {
            global::LightSwitchApplication.Aktivnost.DetailsClass.Initialize(this);
        }
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Aktivnost_Created();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Aktivnost_AllowSaveWithErrors(ref bool result);
    
        #endregion
    
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::Microsoft.LightSwitch.IApplication<global::LightSwitchApplication.DataWorkspace> Application
        {
            get
            {
                return (global::Microsoft.LightSwitch.IApplication<global::LightSwitchApplication.DataWorkspace>)global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)this.Details.EntitySet.Details.DataService.Details.DataWorkspace;
            }
        }
        
        #endregion
    
        #region Public Properties
    
        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<global::System.DateTime> Vreme_pocetok
        {
            get
            {
                return global::LightSwitchApplication.Aktivnost.DetailsClass.GetValue(this, global::LightSwitchApplication.Aktivnost.DetailsClass.PropertySetProperties.Vreme_pocetok);
            }
            set
            {
                global::LightSwitchApplication.Aktivnost.DetailsClass.SetValue(this, global::LightSwitchApplication.Aktivnost.DetailsClass.PropertySetProperties.Vreme_pocetok, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Vreme_pocetok_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Vreme_pocetok_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Vreme_pocetok_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<global::System.DateTime> Vreme_kraj
        {
            get
            {
                return global::LightSwitchApplication.Aktivnost.DetailsClass.GetValue(this, global::LightSwitchApplication.Aktivnost.DetailsClass.PropertySetProperties.Vreme_kraj);
            }
            set
            {
                global::LightSwitchApplication.Aktivnost.DetailsClass.SetValue(this, global::LightSwitchApplication.Aktivnost.DetailsClass.PropertySetProperties.Vreme_kraj, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Vreme_kraj_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Vreme_kraj_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Vreme_kraj_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public int ID_aktivnost
        {
            get
            {
                return global::LightSwitchApplication.Aktivnost.DetailsClass.GetValue(this, global::LightSwitchApplication.Aktivnost.DetailsClass.PropertySetProperties.ID_aktivnost);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ID_aktivnost_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ID_aktivnost_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ID_aktivnost_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<bool> Otkazan
        {
            get
            {
                return global::LightSwitchApplication.Aktivnost.DetailsClass.GetValue(this, global::LightSwitchApplication.Aktivnost.DetailsClass.PropertySetProperties.Otkazan);
            }
            set
            {
                global::LightSwitchApplication.Aktivnost.DetailsClass.SetValue(this, global::LightSwitchApplication.Aktivnost.DetailsClass.PropertySetProperties.Otkazan, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Otkazan_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Otkazan_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Otkazan_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::LightSwitchApplication.Predmet Predmet
        {
            get
            {
                return global::LightSwitchApplication.Aktivnost.DetailsClass.GetValue(this, global::LightSwitchApplication.Aktivnost.DetailsClass.PropertySetProperties.Predmet);
            }
            set
            {
                global::LightSwitchApplication.Aktivnost.DetailsClass.SetValue(this, global::LightSwitchApplication.Aktivnost.DetailsClass.PropertySetProperties.Predmet, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Predmet_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Predmet_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Predmet_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::LightSwitchApplication.Profesor Profesor
        {
            get
            {
                return global::LightSwitchApplication.Aktivnost.DetailsClass.GetValue(this, global::LightSwitchApplication.Aktivnost.DetailsClass.PropertySetProperties.Profesor);
            }
            set
            {
                global::LightSwitchApplication.Aktivnost.DetailsClass.SetValue(this, global::LightSwitchApplication.Aktivnost.DetailsClass.PropertySetProperties.Profesor, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Profesor_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Profesor_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Profesor_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::LightSwitchApplication.Prostorija Prostorija
        {
            get
            {
                return global::LightSwitchApplication.Aktivnost.DetailsClass.GetValue(this, global::LightSwitchApplication.Aktivnost.DetailsClass.PropertySetProperties.Prostorija);
            }
            set
            {
                global::LightSwitchApplication.Aktivnost.DetailsClass.SetValue(this, global::LightSwitchApplication.Aktivnost.DetailsClass.PropertySetProperties.Prostorija, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Prostorija_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Prostorija_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Prostorija_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::LightSwitchApplication.TipNaAktivnost TipNaAktivnost
        {
            get
            {
                return global::LightSwitchApplication.Aktivnost.DetailsClass.GetValue(this, global::LightSwitchApplication.Aktivnost.DetailsClass.PropertySetProperties.TipNaAktivnost);
            }
            set
            {
                global::LightSwitchApplication.Aktivnost.DetailsClass.SetValue(this, global::LightSwitchApplication.Aktivnost.DetailsClass.PropertySetProperties.TipNaAktivnost, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TipNaAktivnost_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TipNaAktivnost_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TipNaAktivnost_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::LightSwitchApplication.Den Den
        {
            get
            {
                return global::LightSwitchApplication.Aktivnost.DetailsClass.GetValue(this, global::LightSwitchApplication.Aktivnost.DetailsClass.PropertySetProperties.Den);
            }
            set
            {
                global::LightSwitchApplication.Aktivnost.DetailsClass.SetValue(this, global::LightSwitchApplication.Aktivnost.DetailsClass.PropertySetProperties.Den, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Den_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Den_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Den_Changed();

        #endregion
    
        #region Details Class
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed class DetailsClass : global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<
                global::LightSwitchApplication.Aktivnost,
                global::LightSwitchApplication.Aktivnost.DetailsClass,
                global::LightSwitchApplication.Aktivnost.DetailsClass.IImplementation,
                global::LightSwitchApplication.Aktivnost.DetailsClass.PropertySet,
                global::Microsoft.LightSwitch.Details.Framework.EntityCommandSet<global::LightSwitchApplication.Aktivnost, global::LightSwitchApplication.Aktivnost.DetailsClass>,
                global::Microsoft.LightSwitch.Details.Framework.EntityMethodSet<global::LightSwitchApplication.Aktivnost, global::LightSwitchApplication.Aktivnost.DetailsClass>>
        {
    
            static DetailsClass()
            {
                var initializeEntry = global::LightSwitchApplication.Aktivnost.DetailsClass.PropertySetProperties.Vreme_pocetok;
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<global::LightSwitchApplication.Aktivnost, global::LightSwitchApplication.Aktivnost.DetailsClass>.Entry
                __AktivnostEntry = new global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<global::LightSwitchApplication.Aktivnost, global::LightSwitchApplication.Aktivnost.DetailsClass>.Entry(
                    global::LightSwitchApplication.Aktivnost.DetailsClass.__Aktivnost_CreateNew,
                    global::LightSwitchApplication.Aktivnost.DetailsClass.__Aktivnost_Created,
                    global::LightSwitchApplication.Aktivnost.DetailsClass.__Aktivnost_AllowSaveWithErrors);
            private static global::LightSwitchApplication.Aktivnost __Aktivnost_CreateNew(global::Microsoft.LightSwitch.Framework.EntitySet<global::LightSwitchApplication.Aktivnost> es)
            {
                return new global::LightSwitchApplication.Aktivnost(es);
            }
            private static void __Aktivnost_Created(global::LightSwitchApplication.Aktivnost e)
            {
                e.Aktivnost_Created();
            }
            private static bool __Aktivnost_AllowSaveWithErrors(global::LightSwitchApplication.Aktivnost e)
            {
                bool result = false;
                e.Aktivnost_AllowSaveWithErrors(ref result);
                return result;
            }
    
            public DetailsClass() : base()
            {
            }
    
            public new global::Microsoft.LightSwitch.Details.Framework.EntityCommandSet<global::LightSwitchApplication.Aktivnost, global::LightSwitchApplication.Aktivnost.DetailsClass> Commands
            {
                get
                {
                    return base.Commands;
                }
            }
    
            public new global::Microsoft.LightSwitch.Details.Framework.EntityMethodSet<global::LightSwitchApplication.Aktivnost, global::LightSwitchApplication.Aktivnost.DetailsClass> Methods
            {
                get
                {
                    return base.Methods;
                }
            }
    
            public new global::LightSwitchApplication.Aktivnost.DetailsClass.PropertySet Properties
            {
                get
                {
                    return base.Properties;
                }
            }
    
            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class PropertySet : global::Microsoft.LightSwitch.Details.Framework.Base.EntityPropertySet<global::LightSwitchApplication.Aktivnost, global::LightSwitchApplication.Aktivnost.DetailsClass>
            {
    
                public PropertySet() : base()
                {
                }
    
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Aktivnost, global::LightSwitchApplication.Aktivnost.DetailsClass, global::System.Nullable<global::System.DateTime>> Vreme_pocetok
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Aktivnost.DetailsClass.PropertySetProperties.Vreme_pocetok) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Aktivnost, global::LightSwitchApplication.Aktivnost.DetailsClass, global::System.Nullable<global::System.DateTime>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Aktivnost, global::LightSwitchApplication.Aktivnost.DetailsClass, global::System.Nullable<global::System.DateTime>> Vreme_kraj
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Aktivnost.DetailsClass.PropertySetProperties.Vreme_kraj) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Aktivnost, global::LightSwitchApplication.Aktivnost.DetailsClass, global::System.Nullable<global::System.DateTime>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Aktivnost, global::LightSwitchApplication.Aktivnost.DetailsClass, int> ID_aktivnost
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Aktivnost.DetailsClass.PropertySetProperties.ID_aktivnost) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Aktivnost, global::LightSwitchApplication.Aktivnost.DetailsClass, int>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Aktivnost, global::LightSwitchApplication.Aktivnost.DetailsClass, global::System.Nullable<bool>> Otkazan
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Aktivnost.DetailsClass.PropertySetProperties.Otkazan) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Aktivnost, global::LightSwitchApplication.Aktivnost.DetailsClass, global::System.Nullable<bool>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Aktivnost, global::LightSwitchApplication.Aktivnost.DetailsClass, global::LightSwitchApplication.Predmet> Predmet
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Aktivnost.DetailsClass.PropertySetProperties.Predmet) as global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Aktivnost, global::LightSwitchApplication.Aktivnost.DetailsClass, global::LightSwitchApplication.Predmet>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Aktivnost, global::LightSwitchApplication.Aktivnost.DetailsClass, global::LightSwitchApplication.Profesor> Profesor
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Aktivnost.DetailsClass.PropertySetProperties.Profesor) as global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Aktivnost, global::LightSwitchApplication.Aktivnost.DetailsClass, global::LightSwitchApplication.Profesor>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Aktivnost, global::LightSwitchApplication.Aktivnost.DetailsClass, global::LightSwitchApplication.Prostorija> Prostorija
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Aktivnost.DetailsClass.PropertySetProperties.Prostorija) as global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Aktivnost, global::LightSwitchApplication.Aktivnost.DetailsClass, global::LightSwitchApplication.Prostorija>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Aktivnost, global::LightSwitchApplication.Aktivnost.DetailsClass, global::LightSwitchApplication.TipNaAktivnost> TipNaAktivnost
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Aktivnost.DetailsClass.PropertySetProperties.TipNaAktivnost) as global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Aktivnost, global::LightSwitchApplication.Aktivnost.DetailsClass, global::LightSwitchApplication.TipNaAktivnost>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Aktivnost, global::LightSwitchApplication.Aktivnost.DetailsClass, global::LightSwitchApplication.Den> Den
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Aktivnost.DetailsClass.PropertySetProperties.Den) as global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Aktivnost, global::LightSwitchApplication.Aktivnost.DetailsClass, global::LightSwitchApplication.Den>;
                    }
                }
                
            }
    
            #pragma warning disable 109
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
            public interface IImplementation : global::Microsoft.LightSwitch.Internal.IEntityImplementation
            {
                new global::System.Nullable<global::System.DateTime> Vreme_pocetok { get; set; }
                new global::System.Nullable<global::System.DateTime> Vreme_kraj { get; set; }
                new int ID_aktivnost { get; }
                new global::System.Nullable<bool> Otkazan { get; set; }
                new global::Microsoft.LightSwitch.Internal.IEntityImplementation Predmet { get; set; }
                new global::Microsoft.LightSwitch.Internal.IEntityImplementation Profesor { get; set; }
                new global::Microsoft.LightSwitch.Internal.IEntityImplementation Prostorija { get; set; }
                new global::Microsoft.LightSwitch.Internal.IEntityImplementation TipNaAktivnost { get; set; }
                new global::Microsoft.LightSwitch.Internal.IEntityImplementation Den { get; set; }
            }
            #pragma warning restore 109
    
            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.1.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal class PropertySetProperties
            {
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Aktivnost, global::LightSwitchApplication.Aktivnost.DetailsClass, global::System.Nullable<global::System.DateTime>>.Entry
                    Vreme_pocetok = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Aktivnost, global::LightSwitchApplication.Aktivnost.DetailsClass, global::System.Nullable<global::System.DateTime>>.Entry(
                        "Vreme_pocetok",
                        global::LightSwitchApplication.Aktivnost.DetailsClass.PropertySetProperties._Vreme_pocetok_Stub,
                        global::LightSwitchApplication.Aktivnost.DetailsClass.PropertySetProperties._Vreme_pocetok_ComputeIsReadOnly,
                        global::LightSwitchApplication.Aktivnost.DetailsClass.PropertySetProperties._Vreme_pocetok_Validate,
                        global::LightSwitchApplication.Aktivnost.DetailsClass.PropertySetProperties._Vreme_pocetok_GetImplementationValue,
                        global::LightSwitchApplication.Aktivnost.DetailsClass.PropertySetProperties._Vreme_pocetok_SetImplementationValue,
                        global::LightSwitchApplication.Aktivnost.DetailsClass.PropertySetProperties._Vreme_pocetok_OnValueChanged);
                private static void _Vreme_pocetok_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Aktivnost.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Aktivnost, global::LightSwitchApplication.Aktivnost.DetailsClass, global::System.Nullable<global::System.DateTime>>.Data> c, global::LightSwitchApplication.Aktivnost.DetailsClass d, object sf)
                {
                    c(d, ref d._Vreme_pocetok, sf);
                }
                private static bool _Vreme_pocetok_ComputeIsReadOnly(global::LightSwitchApplication.Aktivnost e)
                {
                    bool result = false;
                    e.Vreme_pocetok_IsReadOnly(ref result);
                    return result;
                }
                private static void _Vreme_pocetok_Validate(global::LightSwitchApplication.Aktivnost e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Vreme_pocetok_Validate(r);
                }
                private static global::System.Nullable<global::System.DateTime> _Vreme_pocetok_GetImplementationValue(global::LightSwitchApplication.Aktivnost.DetailsClass d)
                {
                    return d.ImplementationEntity.Vreme_pocetok;
                }
                private static void _Vreme_pocetok_SetImplementationValue(global::LightSwitchApplication.Aktivnost.DetailsClass d, global::System.Nullable<global::System.DateTime> v)
                {
                    d.ImplementationEntity.Vreme_pocetok = global::LightSwitchApplication.Aktivnost.DetailsClass.ClearDateTimeKind(v);
                }
                private static void _Vreme_pocetok_OnValueChanged(global::LightSwitchApplication.Aktivnost e)
                {
                    e.Vreme_pocetok_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Aktivnost, global::LightSwitchApplication.Aktivnost.DetailsClass, global::System.Nullable<global::System.DateTime>>.Entry
                    Vreme_kraj = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Aktivnost, global::LightSwitchApplication.Aktivnost.DetailsClass, global::System.Nullable<global::System.DateTime>>.Entry(
                        "Vreme_kraj",
                        global::LightSwitchApplication.Aktivnost.DetailsClass.PropertySetProperties._Vreme_kraj_Stub,
                        global::LightSwitchApplication.Aktivnost.DetailsClass.PropertySetProperties._Vreme_kraj_ComputeIsReadOnly,
                        global::LightSwitchApplication.Aktivnost.DetailsClass.PropertySetProperties._Vreme_kraj_Validate,
                        global::LightSwitchApplication.Aktivnost.DetailsClass.PropertySetProperties._Vreme_kraj_GetImplementationValue,
                        global::LightSwitchApplication.Aktivnost.DetailsClass.PropertySetProperties._Vreme_kraj_SetImplementationValue,
                        global::LightSwitchApplication.Aktivnost.DetailsClass.PropertySetProperties._Vreme_kraj_OnValueChanged);
                private static void _Vreme_kraj_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Aktivnost.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Aktivnost, global::LightSwitchApplication.Aktivnost.DetailsClass, global::System.Nullable<global::System.DateTime>>.Data> c, global::LightSwitchApplication.Aktivnost.DetailsClass d, object sf)
                {
                    c(d, ref d._Vreme_kraj, sf);
                }
                private static bool _Vreme_kraj_ComputeIsReadOnly(global::LightSwitchApplication.Aktivnost e)
                {
                    bool result = false;
                    e.Vreme_kraj_IsReadOnly(ref result);
                    return result;
                }
                private static void _Vreme_kraj_Validate(global::LightSwitchApplication.Aktivnost e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Vreme_kraj_Validate(r);
                }
                private static global::System.Nullable<global::System.DateTime> _Vreme_kraj_GetImplementationValue(global::LightSwitchApplication.Aktivnost.DetailsClass d)
                {
                    return d.ImplementationEntity.Vreme_kraj;
                }
                private static void _Vreme_kraj_SetImplementationValue(global::LightSwitchApplication.Aktivnost.DetailsClass d, global::System.Nullable<global::System.DateTime> v)
                {
                    d.ImplementationEntity.Vreme_kraj = global::LightSwitchApplication.Aktivnost.DetailsClass.ClearDateTimeKind(v);
                }
                private static void _Vreme_kraj_OnValueChanged(global::LightSwitchApplication.Aktivnost e)
                {
                    e.Vreme_kraj_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Aktivnost, global::LightSwitchApplication.Aktivnost.DetailsClass, int>.Entry
                    ID_aktivnost = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Aktivnost, global::LightSwitchApplication.Aktivnost.DetailsClass, int>.Entry(
                        "ID_aktivnost",
                        global::LightSwitchApplication.Aktivnost.DetailsClass.PropertySetProperties._ID_aktivnost_Stub,
                        global::LightSwitchApplication.Aktivnost.DetailsClass.PropertySetProperties._ID_aktivnost_ComputeIsReadOnly,
                        global::LightSwitchApplication.Aktivnost.DetailsClass.PropertySetProperties._ID_aktivnost_Validate,
                        global::LightSwitchApplication.Aktivnost.DetailsClass.PropertySetProperties._ID_aktivnost_GetImplementationValue,
                        null,
                        global::LightSwitchApplication.Aktivnost.DetailsClass.PropertySetProperties._ID_aktivnost_OnValueChanged);
                private static void _ID_aktivnost_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Aktivnost.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Aktivnost, global::LightSwitchApplication.Aktivnost.DetailsClass, int>.Data> c, global::LightSwitchApplication.Aktivnost.DetailsClass d, object sf)
                {
                    c(d, ref d._ID_aktivnost, sf);
                }
                private static bool _ID_aktivnost_ComputeIsReadOnly(global::LightSwitchApplication.Aktivnost e)
                {
                    bool result = false;
                    e.ID_aktivnost_IsReadOnly(ref result);
                    return result;
                }
                private static void _ID_aktivnost_Validate(global::LightSwitchApplication.Aktivnost e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ID_aktivnost_Validate(r);
                }
                private static int _ID_aktivnost_GetImplementationValue(global::LightSwitchApplication.Aktivnost.DetailsClass d)
                {
                    return d.ImplementationEntity.ID_aktivnost;
                }
                private static void _ID_aktivnost_OnValueChanged(global::LightSwitchApplication.Aktivnost e)
                {
                    e.ID_aktivnost_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Aktivnost, global::LightSwitchApplication.Aktivnost.DetailsClass, global::System.Nullable<bool>>.Entry
                    Otkazan = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Aktivnost, global::LightSwitchApplication.Aktivnost.DetailsClass, global::System.Nullable<bool>>.Entry(
                        "Otkazan",
                        global::LightSwitchApplication.Aktivnost.DetailsClass.PropertySetProperties._Otkazan_Stub,
                        global::LightSwitchApplication.Aktivnost.DetailsClass.PropertySetProperties._Otkazan_ComputeIsReadOnly,
                        global::LightSwitchApplication.Aktivnost.DetailsClass.PropertySetProperties._Otkazan_Validate,
                        global::LightSwitchApplication.Aktivnost.DetailsClass.PropertySetProperties._Otkazan_GetImplementationValue,
                        global::LightSwitchApplication.Aktivnost.DetailsClass.PropertySetProperties._Otkazan_SetImplementationValue,
                        global::LightSwitchApplication.Aktivnost.DetailsClass.PropertySetProperties._Otkazan_OnValueChanged);
                private static void _Otkazan_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Aktivnost.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Aktivnost, global::LightSwitchApplication.Aktivnost.DetailsClass, global::System.Nullable<bool>>.Data> c, global::LightSwitchApplication.Aktivnost.DetailsClass d, object sf)
                {
                    c(d, ref d._Otkazan, sf);
                }
                private static bool _Otkazan_ComputeIsReadOnly(global::LightSwitchApplication.Aktivnost e)
                {
                    bool result = false;
                    e.Otkazan_IsReadOnly(ref result);
                    return result;
                }
                private static void _Otkazan_Validate(global::LightSwitchApplication.Aktivnost e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Otkazan_Validate(r);
                }
                private static global::System.Nullable<bool> _Otkazan_GetImplementationValue(global::LightSwitchApplication.Aktivnost.DetailsClass d)
                {
                    return d.ImplementationEntity.Otkazan;
                }
                private static void _Otkazan_SetImplementationValue(global::LightSwitchApplication.Aktivnost.DetailsClass d, global::System.Nullable<bool> v)
                {
                    d.ImplementationEntity.Otkazan = v;
                }
                private static void _Otkazan_OnValueChanged(global::LightSwitchApplication.Aktivnost e)
                {
                    e.Otkazan_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Aktivnost, global::LightSwitchApplication.Aktivnost.DetailsClass, global::LightSwitchApplication.Predmet>.Entry
                    Predmet = new global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Aktivnost, global::LightSwitchApplication.Aktivnost.DetailsClass, global::LightSwitchApplication.Predmet>.Entry(
                        "Predmet",
                        global::LightSwitchApplication.Aktivnost.DetailsClass.PropertySetProperties._Predmet_Stub,
                        global::LightSwitchApplication.Aktivnost.DetailsClass.PropertySetProperties._Predmet_ComputeIsReadOnly,
                        global::LightSwitchApplication.Aktivnost.DetailsClass.PropertySetProperties._Predmet_Validate,
                        global::LightSwitchApplication.Aktivnost.DetailsClass.PropertySetProperties._Predmet_GetCoreImplementationValue,
                        global::LightSwitchApplication.Aktivnost.DetailsClass.PropertySetProperties._Predmet_GetImplementationValue,
                        global::LightSwitchApplication.Aktivnost.DetailsClass.PropertySetProperties._Predmet_SetImplementationValue,
                        global::LightSwitchApplication.Aktivnost.DetailsClass.PropertySetProperties._Predmet_Refresh,
                        global::LightSwitchApplication.Aktivnost.DetailsClass.PropertySetProperties._Predmet_OnValueChanged);
                private static void _Predmet_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Aktivnost.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Aktivnost, global::LightSwitchApplication.Aktivnost.DetailsClass, global::LightSwitchApplication.Predmet>.Data> c, global::LightSwitchApplication.Aktivnost.DetailsClass d, object sf)
                {
                    c(d, ref d._Predmet, sf);
                }
                private static bool _Predmet_ComputeIsReadOnly(global::LightSwitchApplication.Aktivnost e)
                {
                    bool result = false;
                    e.Predmet_IsReadOnly(ref result);
                    return result;
                }
                private static void _Predmet_Validate(global::LightSwitchApplication.Aktivnost e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Predmet_Validate(r);
                }
                private static global::Microsoft.LightSwitch.Internal.IEntityImplementation _Predmet_GetCoreImplementationValue(global::LightSwitchApplication.Aktivnost.DetailsClass d)
                {
                    return d.ImplementationEntity.Predmet;
                }
                private static global::LightSwitchApplication.Predmet _Predmet_GetImplementationValue(global::LightSwitchApplication.Aktivnost.DetailsClass d)
                {
                    return d.GetImplementationValue<global::LightSwitchApplication.Predmet, global::LightSwitchApplication.Predmet.DetailsClass>(global::LightSwitchApplication.Aktivnost.DetailsClass.PropertySetProperties.Predmet, ref d._Predmet);
                }
                private static void _Predmet_SetImplementationValue(global::LightSwitchApplication.Aktivnost.DetailsClass d, global::LightSwitchApplication.Predmet v)
                {
                    d.SetImplementationValue(global::LightSwitchApplication.Aktivnost.DetailsClass.PropertySetProperties.Predmet, ref d._Predmet, (i, ev) => i.Predmet = ev, v);
                }
                private static void _Predmet_Refresh(global::LightSwitchApplication.Aktivnost.DetailsClass d)
                {
                    d.RefreshNavigationProperty(global::LightSwitchApplication.Aktivnost.DetailsClass.PropertySetProperties.Predmet, ref d._Predmet);
                }
                private static void _Predmet_OnValueChanged(global::LightSwitchApplication.Aktivnost e)
                {
                    e.Predmet_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Aktivnost, global::LightSwitchApplication.Aktivnost.DetailsClass, global::LightSwitchApplication.Profesor>.Entry
                    Profesor = new global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Aktivnost, global::LightSwitchApplication.Aktivnost.DetailsClass, global::LightSwitchApplication.Profesor>.Entry(
                        "Profesor",
                        global::LightSwitchApplication.Aktivnost.DetailsClass.PropertySetProperties._Profesor_Stub,
                        global::LightSwitchApplication.Aktivnost.DetailsClass.PropertySetProperties._Profesor_ComputeIsReadOnly,
                        global::LightSwitchApplication.Aktivnost.DetailsClass.PropertySetProperties._Profesor_Validate,
                        global::LightSwitchApplication.Aktivnost.DetailsClass.PropertySetProperties._Profesor_GetCoreImplementationValue,
                        global::LightSwitchApplication.Aktivnost.DetailsClass.PropertySetProperties._Profesor_GetImplementationValue,
                        global::LightSwitchApplication.Aktivnost.DetailsClass.PropertySetProperties._Profesor_SetImplementationValue,
                        global::LightSwitchApplication.Aktivnost.DetailsClass.PropertySetProperties._Profesor_Refresh,
                        global::LightSwitchApplication.Aktivnost.DetailsClass.PropertySetProperties._Profesor_OnValueChanged);
                private static void _Profesor_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Aktivnost.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Aktivnost, global::LightSwitchApplication.Aktivnost.DetailsClass, global::LightSwitchApplication.Profesor>.Data> c, global::LightSwitchApplication.Aktivnost.DetailsClass d, object sf)
                {
                    c(d, ref d._Profesor, sf);
                }
                private static bool _Profesor_ComputeIsReadOnly(global::LightSwitchApplication.Aktivnost e)
                {
                    bool result = false;
                    e.Profesor_IsReadOnly(ref result);
                    return result;
                }
                private static void _Profesor_Validate(global::LightSwitchApplication.Aktivnost e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Profesor_Validate(r);
                }
                private static global::Microsoft.LightSwitch.Internal.IEntityImplementation _Profesor_GetCoreImplementationValue(global::LightSwitchApplication.Aktivnost.DetailsClass d)
                {
                    return d.ImplementationEntity.Profesor;
                }
                private static global::LightSwitchApplication.Profesor _Profesor_GetImplementationValue(global::LightSwitchApplication.Aktivnost.DetailsClass d)
                {
                    return d.GetImplementationValue<global::LightSwitchApplication.Profesor, global::LightSwitchApplication.Profesor.DetailsClass>(global::LightSwitchApplication.Aktivnost.DetailsClass.PropertySetProperties.Profesor, ref d._Profesor);
                }
                private static void _Profesor_SetImplementationValue(global::LightSwitchApplication.Aktivnost.DetailsClass d, global::LightSwitchApplication.Profesor v)
                {
                    d.SetImplementationValue(global::LightSwitchApplication.Aktivnost.DetailsClass.PropertySetProperties.Profesor, ref d._Profesor, (i, ev) => i.Profesor = ev, v);
                }
                private static void _Profesor_Refresh(global::LightSwitchApplication.Aktivnost.DetailsClass d)
                {
                    d.RefreshNavigationProperty(global::LightSwitchApplication.Aktivnost.DetailsClass.PropertySetProperties.Profesor, ref d._Profesor);
                }
                private static void _Profesor_OnValueChanged(global::LightSwitchApplication.Aktivnost e)
                {
                    e.Profesor_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Aktivnost, global::LightSwitchApplication.Aktivnost.DetailsClass, global::LightSwitchApplication.Prostorija>.Entry
                    Prostorija = new global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Aktivnost, global::LightSwitchApplication.Aktivnost.DetailsClass, global::LightSwitchApplication.Prostorija>.Entry(
                        "Prostorija",
                        global::LightSwitchApplication.Aktivnost.DetailsClass.PropertySetProperties._Prostorija_Stub,
                        global::LightSwitchApplication.Aktivnost.DetailsClass.PropertySetProperties._Prostorija_ComputeIsReadOnly,
                        global::LightSwitchApplication.Aktivnost.DetailsClass.PropertySetProperties._Prostorija_Validate,
                        global::LightSwitchApplication.Aktivnost.DetailsClass.PropertySetProperties._Prostorija_GetCoreImplementationValue,
                        global::LightSwitchApplication.Aktivnost.DetailsClass.PropertySetProperties._Prostorija_GetImplementationValue,
                        global::LightSwitchApplication.Aktivnost.DetailsClass.PropertySetProperties._Prostorija_SetImplementationValue,
                        global::LightSwitchApplication.Aktivnost.DetailsClass.PropertySetProperties._Prostorija_Refresh,
                        global::LightSwitchApplication.Aktivnost.DetailsClass.PropertySetProperties._Prostorija_OnValueChanged);
                private static void _Prostorija_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Aktivnost.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Aktivnost, global::LightSwitchApplication.Aktivnost.DetailsClass, global::LightSwitchApplication.Prostorija>.Data> c, global::LightSwitchApplication.Aktivnost.DetailsClass d, object sf)
                {
                    c(d, ref d._Prostorija, sf);
                }
                private static bool _Prostorija_ComputeIsReadOnly(global::LightSwitchApplication.Aktivnost e)
                {
                    bool result = false;
                    e.Prostorija_IsReadOnly(ref result);
                    return result;
                }
                private static void _Prostorija_Validate(global::LightSwitchApplication.Aktivnost e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Prostorija_Validate(r);
                }
                private static global::Microsoft.LightSwitch.Internal.IEntityImplementation _Prostorija_GetCoreImplementationValue(global::LightSwitchApplication.Aktivnost.DetailsClass d)
                {
                    return d.ImplementationEntity.Prostorija;
                }
                private static global::LightSwitchApplication.Prostorija _Prostorija_GetImplementationValue(global::LightSwitchApplication.Aktivnost.DetailsClass d)
                {
                    return d.GetImplementationValue<global::LightSwitchApplication.Prostorija, global::LightSwitchApplication.Prostorija.DetailsClass>(global::LightSwitchApplication.Aktivnost.DetailsClass.PropertySetProperties.Prostorija, ref d._Prostorija);
                }
                private static void _Prostorija_SetImplementationValue(global::LightSwitchApplication.Aktivnost.DetailsClass d, global::LightSwitchApplication.Prostorija v)
                {
                    d.SetImplementationValue(global::LightSwitchApplication.Aktivnost.DetailsClass.PropertySetProperties.Prostorija, ref d._Prostorija, (i, ev) => i.Prostorija = ev, v);
                }
                private static void _Prostorija_Refresh(global::LightSwitchApplication.Aktivnost.DetailsClass d)
                {
                    d.RefreshNavigationProperty(global::LightSwitchApplication.Aktivnost.DetailsClass.PropertySetProperties.Prostorija, ref d._Prostorija);
                }
                private static void _Prostorija_OnValueChanged(global::LightSwitchApplication.Aktivnost e)
                {
                    e.Prostorija_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Aktivnost, global::LightSwitchApplication.Aktivnost.DetailsClass, global::LightSwitchApplication.TipNaAktivnost>.Entry
                    TipNaAktivnost = new global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Aktivnost, global::LightSwitchApplication.Aktivnost.DetailsClass, global::LightSwitchApplication.TipNaAktivnost>.Entry(
                        "TipNaAktivnost",
                        global::LightSwitchApplication.Aktivnost.DetailsClass.PropertySetProperties._TipNaAktivnost_Stub,
                        global::LightSwitchApplication.Aktivnost.DetailsClass.PropertySetProperties._TipNaAktivnost_ComputeIsReadOnly,
                        global::LightSwitchApplication.Aktivnost.DetailsClass.PropertySetProperties._TipNaAktivnost_Validate,
                        global::LightSwitchApplication.Aktivnost.DetailsClass.PropertySetProperties._TipNaAktivnost_GetCoreImplementationValue,
                        global::LightSwitchApplication.Aktivnost.DetailsClass.PropertySetProperties._TipNaAktivnost_GetImplementationValue,
                        global::LightSwitchApplication.Aktivnost.DetailsClass.PropertySetProperties._TipNaAktivnost_SetImplementationValue,
                        global::LightSwitchApplication.Aktivnost.DetailsClass.PropertySetProperties._TipNaAktivnost_Refresh,
                        global::LightSwitchApplication.Aktivnost.DetailsClass.PropertySetProperties._TipNaAktivnost_OnValueChanged);
                private static void _TipNaAktivnost_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Aktivnost.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Aktivnost, global::LightSwitchApplication.Aktivnost.DetailsClass, global::LightSwitchApplication.TipNaAktivnost>.Data> c, global::LightSwitchApplication.Aktivnost.DetailsClass d, object sf)
                {
                    c(d, ref d._TipNaAktivnost, sf);
                }
                private static bool _TipNaAktivnost_ComputeIsReadOnly(global::LightSwitchApplication.Aktivnost e)
                {
                    bool result = false;
                    e.TipNaAktivnost_IsReadOnly(ref result);
                    return result;
                }
                private static void _TipNaAktivnost_Validate(global::LightSwitchApplication.Aktivnost e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.TipNaAktivnost_Validate(r);
                }
                private static global::Microsoft.LightSwitch.Internal.IEntityImplementation _TipNaAktivnost_GetCoreImplementationValue(global::LightSwitchApplication.Aktivnost.DetailsClass d)
                {
                    return d.ImplementationEntity.TipNaAktivnost;
                }
                private static global::LightSwitchApplication.TipNaAktivnost _TipNaAktivnost_GetImplementationValue(global::LightSwitchApplication.Aktivnost.DetailsClass d)
                {
                    return d.GetImplementationValue<global::LightSwitchApplication.TipNaAktivnost, global::LightSwitchApplication.TipNaAktivnost.DetailsClass>(global::LightSwitchApplication.Aktivnost.DetailsClass.PropertySetProperties.TipNaAktivnost, ref d._TipNaAktivnost);
                }
                private static void _TipNaAktivnost_SetImplementationValue(global::LightSwitchApplication.Aktivnost.DetailsClass d, global::LightSwitchApplication.TipNaAktivnost v)
                {
                    d.SetImplementationValue(global::LightSwitchApplication.Aktivnost.DetailsClass.PropertySetProperties.TipNaAktivnost, ref d._TipNaAktivnost, (i, ev) => i.TipNaAktivnost = ev, v);
                }
                private static void _TipNaAktivnost_Refresh(global::LightSwitchApplication.Aktivnost.DetailsClass d)
                {
                    d.RefreshNavigationProperty(global::LightSwitchApplication.Aktivnost.DetailsClass.PropertySetProperties.TipNaAktivnost, ref d._TipNaAktivnost);
                }
                private static void _TipNaAktivnost_OnValueChanged(global::LightSwitchApplication.Aktivnost e)
                {
                    e.TipNaAktivnost_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Aktivnost, global::LightSwitchApplication.Aktivnost.DetailsClass, global::LightSwitchApplication.Den>.Entry
                    Den = new global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Aktivnost, global::LightSwitchApplication.Aktivnost.DetailsClass, global::LightSwitchApplication.Den>.Entry(
                        "Den",
                        global::LightSwitchApplication.Aktivnost.DetailsClass.PropertySetProperties._Den_Stub,
                        global::LightSwitchApplication.Aktivnost.DetailsClass.PropertySetProperties._Den_ComputeIsReadOnly,
                        global::LightSwitchApplication.Aktivnost.DetailsClass.PropertySetProperties._Den_Validate,
                        global::LightSwitchApplication.Aktivnost.DetailsClass.PropertySetProperties._Den_GetCoreImplementationValue,
                        global::LightSwitchApplication.Aktivnost.DetailsClass.PropertySetProperties._Den_GetImplementationValue,
                        global::LightSwitchApplication.Aktivnost.DetailsClass.PropertySetProperties._Den_SetImplementationValue,
                        global::LightSwitchApplication.Aktivnost.DetailsClass.PropertySetProperties._Den_Refresh,
                        global::LightSwitchApplication.Aktivnost.DetailsClass.PropertySetProperties._Den_OnValueChanged);
                private static void _Den_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Aktivnost.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Aktivnost, global::LightSwitchApplication.Aktivnost.DetailsClass, global::LightSwitchApplication.Den>.Data> c, global::LightSwitchApplication.Aktivnost.DetailsClass d, object sf)
                {
                    c(d, ref d._Den, sf);
                }
                private static bool _Den_ComputeIsReadOnly(global::LightSwitchApplication.Aktivnost e)
                {
                    bool result = false;
                    e.Den_IsReadOnly(ref result);
                    return result;
                }
                private static void _Den_Validate(global::LightSwitchApplication.Aktivnost e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Den_Validate(r);
                }
                private static global::Microsoft.LightSwitch.Internal.IEntityImplementation _Den_GetCoreImplementationValue(global::LightSwitchApplication.Aktivnost.DetailsClass d)
                {
                    return d.ImplementationEntity.Den;
                }
                private static global::LightSwitchApplication.Den _Den_GetImplementationValue(global::LightSwitchApplication.Aktivnost.DetailsClass d)
                {
                    return d.GetImplementationValue<global::LightSwitchApplication.Den, global::LightSwitchApplication.Den.DetailsClass>(global::LightSwitchApplication.Aktivnost.DetailsClass.PropertySetProperties.Den, ref d._Den);
                }
                private static void _Den_SetImplementationValue(global::LightSwitchApplication.Aktivnost.DetailsClass d, global::LightSwitchApplication.Den v)
                {
                    d.SetImplementationValue(global::LightSwitchApplication.Aktivnost.DetailsClass.PropertySetProperties.Den, ref d._Den, (i, ev) => i.Den = ev, v);
                }
                private static void _Den_Refresh(global::LightSwitchApplication.Aktivnost.DetailsClass d)
                {
                    d.RefreshNavigationProperty(global::LightSwitchApplication.Aktivnost.DetailsClass.PropertySetProperties.Den, ref d._Den);
                }
                private static void _Den_OnValueChanged(global::LightSwitchApplication.Aktivnost e)
                {
                    e.Den_Changed();
                }
    
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Aktivnost, global::LightSwitchApplication.Aktivnost.DetailsClass, global::System.Nullable<global::System.DateTime>>.Data _Vreme_pocetok;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Aktivnost, global::LightSwitchApplication.Aktivnost.DetailsClass, global::System.Nullable<global::System.DateTime>>.Data _Vreme_kraj;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Aktivnost, global::LightSwitchApplication.Aktivnost.DetailsClass, int>.Data _ID_aktivnost;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Aktivnost, global::LightSwitchApplication.Aktivnost.DetailsClass, global::System.Nullable<bool>>.Data _Otkazan;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Aktivnost, global::LightSwitchApplication.Aktivnost.DetailsClass, global::LightSwitchApplication.Predmet>.Data _Predmet;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Aktivnost, global::LightSwitchApplication.Aktivnost.DetailsClass, global::LightSwitchApplication.Profesor>.Data _Profesor;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Aktivnost, global::LightSwitchApplication.Aktivnost.DetailsClass, global::LightSwitchApplication.Prostorija>.Data _Prostorija;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Aktivnost, global::LightSwitchApplication.Aktivnost.DetailsClass, global::LightSwitchApplication.TipNaAktivnost>.Data _TipNaAktivnost;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Aktivnost, global::LightSwitchApplication.Aktivnost.DetailsClass, global::LightSwitchApplication.Den>.Data _Den;
            
        }
    
        #endregion
    }
    
    #endregion
}
